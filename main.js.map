{"version":3,"sources":["./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/core/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/user.service.ts","./src/app/app.module.ts","./src/app/shared/mobile-number-convension.pipe.ts","./src/app/change-box/change-box.component.ts","./src/app/change-box/change-box.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/core/transaction.service.ts","./src/app/model/error.enum.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../core/user.service';\nimport { ErrorCodes } from '../model/error.enum';\nimport { UserDetails } from '../model/user.model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css'],\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n  public userInfo: UserDetails = {\n    name: '',\n    email: '',\n    address: '',\n    contact: 0,\n    gender: '',\n  };\n  constructor(\n    private readonly _activatedRoute: ActivatedRoute,\n    private readonly _userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    const userId: string =\n      this._activatedRoute.snapshot.paramMap.get('userId') ||\n      this._userService.loggedInUserId;\n    this.subscription.add(\n      this._userService.getUserDetails(userId).subscribe(\n        (userInfo: UserDetails): void => {\n          this.userInfo = userInfo;\n        },\n        (error): void => {\n          if (\n            error.status === ErrorCodes.Unauthorized ||\n            error.status === ErrorCodes.Forbidden\n          ) {\n            this._userService.signOut();\n          }\n        }\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"user-info-outer-container\">\n  <div class=\"user-info-inner-container\">\n    <div class=\"user-info-container\">\n      <h4 class=\"label-name\">Name:</h4>\n      <span>{{userInfo.name}}</span>\n      <h4>Email:</h4>\n      <span>{{userInfo.email}}</span>\n      <h4>Address:</h4>\n      <span>{{userInfo.address}}</span>\n      <h4>Contact:</h4>\n      <span>{{userInfo.contact | mobileNumberConvension: \"IND\"}}</span>\n      <h4>Gender:</h4>\n      <span>{{userInfo.gender}}</span>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../core/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  public userId: string = '';\n  constructor(private readonly _userService: UserService) {}\n\n  ngOnInit(): void {\n    this.userId = this._userService.loggedInUserId;\n  }\n}\n","<h1 class=\"home-title\">Welcome {{userId}}</h1>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly _userService: UserService,\n    private readonly _router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (route.params.userId !== undefined) {\n      return this.verifyUserIdParam(route.params.userId);\n    }\n    const loggedInUser: string = this._userService.loggedInUserId;\n    if (loggedInUser) {\n      return true;\n    }\n    this._userService.signOut();\n    return false;\n  }\n\n  /**\n   * Verify if user id in route params is same as logged in user\n   * @param userId user id\n   */\n  verifyUserIdParam(userId: string): boolean {\n    if (this._userService.loggedInUserId) {\n      if (userId === this._userService.loggedInUserId) {\n        return true;\n      } else {\n        this._router.navigate(['/Profile', this._userService.loggedInUserId]);\n        return false;\n      }\n    }\n    this._userService.signOut();\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './core/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Assignment';\n\n  constructor(private readonly _userService: UserService) {}\n\n  ngOnInit(): void {\n    const session: string | null = sessionStorage.getItem('LOGGED-IN-USER');\n    if (session) {\n      this._userService.loggedInUserId = JSON.parse(session).userId;\n    }\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of, throwError } from 'rxjs';\nimport {\n  AuthenticatedUser,\n  LoginCredentials,\n  User,\n  UserDetails,\n} from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _loggedInUserId: string = '';\n  private _users: User[] = [\n    {\n      name: 'John Doe',\n      email: 'john@gmail.com',\n      address: 'Bedford street, England',\n      contact: 7014569872,\n      gender: 'Male',\n      userId: 'JOHN',\n      password: 'john123$',\n    },\n    {\n      name: 'David Mosby',\n      email: 'dave@gmail.com',\n      address: 'New York, USA',\n      contact: 9822457710,\n      gender: 'Male',\n      userId: 'DAVE',\n      password: 'dave123$',\n    },\n  ];\n  public get loggedInUserId(): string {\n    return this._loggedInUserId;\n  }\n  public set loggedInUserId(value: string) {\n    this._loggedInUserId = value;\n  }\n\n  constructor(private _router: Router) {}\n\n  /**\n   * Authenticates user by searching from users array since it is a mock service\n   * Method can be replaced with an api call\n   * @param loginCredentials login credentials of user\n   */\n  authenticateUser(\n    loginCredentials: LoginCredentials\n  ): Observable<AuthenticatedUser> | Observable<never> {\n    const userIndex: number = this._users.findIndex((user: User) => {\n      return (\n        user.userId === loginCredentials.userId &&\n        user.password === loginCredentials.password\n      );\n    });\n    if (userIndex !== -1) {\n      return of({ userId: loginCredentials.userId, token: 'abcdxyz$' });\n    }\n    return throwError(new HttpErrorResponse({ status: 500 }));\n  }\n\n  /**\n   * Gets user details based on user id\n   * Method can be replaced with an api call\n   * @param userId user id for which details need to be fetched\n   */\n  getUserDetails(userId: string): Observable<UserDetails> | Observable<never> {\n    const userIndex: number = this._users.findIndex((user: User) => {\n      return user.userId === userId;\n    });\n\n    if (userIndex !== -1) {\n      const userInfo: UserDetails = {\n        name: this._users[userIndex].name,\n        email: this._users[userIndex].email,\n        address: this._users[userIndex].address,\n        contact: this._users[userIndex].contact,\n        gender: this._users[userIndex].gender,\n      };\n      return of(userInfo);\n    }\n    return throwError(new HttpErrorResponse({ status: 500 }));\n  }\n\n  /**\n   * Signs out user and clears session and redirects to login page\n   */\n  signOut(): void {\n    this.loggedInUserId = '';\n    sessionStorage.clear();\n    this._router.navigate(['/Login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ChangeBoxComponent } from './change-box/change-box.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MobileNumberConvensionPipe } from './shared/mobile-number-convension.pipe';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangeBoxComponent,\n    UserProfileComponent,\n    HomeComponent,\n    HeaderComponent,\n    MobileNumberConvensionPipe,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mobileNumberConvension',\n})\nexport class MobileNumberConvensionPipe implements PipeTransform {\n  transform(value: number, ...args: string[]): string {\n    let transformedNumber: string = value.toString();\n    args.forEach((arg) => {\n      switch (arg) {\n        case 'IND':\n          transformedNumber = `+91-${transformedNumber.substring(\n            0,\n            3\n          )} ${transformedNumber.substring(3, 6)} ${transformedNumber.substring(\n            6\n          )}`;\n          break;\n      }\n    });\n    return transformedNumber;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TransactionService } from '../core/transaction.service';\nimport { UserService } from '../core/user.service';\nimport { ErrorCodes, ErrorMessages } from '../model/error.enum';\n\n@Component({\n  selector: 'app-change-box',\n  templateUrl: './change-box.component.html',\n  styleUrls: ['./change-box.component.css'],\n})\nexport class ChangeBoxComponent implements OnInit, OnDestroy {\n  public amount: number = 10;\n  public coinCount: number[] = [];\n  public denominations: number[] = [10, 5, 2, 1];\n  public recentCoinCount: number[] = [];\n  public recentTransactions: { amount: number; coinCount: number[] }[] = [];\n  public recentTransactionFetchError: string = '';\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private readonly _userService: UserService,\n    private readonly _transactionService: TransactionService\n  ) {}\n\n  ngOnInit(): void {\n    this.coinCount = this.computeChange(this.denominations, this.amount);\n    this.getRecentTransactions();\n  }\n\n  /**\n   * Gets recent transactions based on user id\n   */\n  getRecentTransactions(): void {\n    const userId: string = this._userService.loggedInUserId;\n    this.subscription.add(\n      this._transactionService.getRecentTransactions(userId).subscribe(\n        (recentTransactions: number[]) => {\n          this.recentTransactions = [];\n          recentTransactions.sort((a: number, b: number) => {\n            return b - a;\n          });\n          recentTransactions.forEach((amount) => {\n            this.recentTransactions.push({\n              amount,\n              coinCount: this.computeChange(this.denominations, amount),\n            });\n          });\n        },\n        (error): void => {\n          if (\n            error.status === ErrorCodes.Unauthorized ||\n            error.status === ErrorCodes.Forbidden\n          ) {\n            this._userService.signOut();\n          } else {\n            this.recentTransactionFetchError =\n              ErrorMessages.RecentTransactionFetchError;\n          }\n        }\n      )\n    );\n  }\n\n  /**\n   * Triggers when amount input changes\n   */\n  onAmountChange(): void {\n    this.coinCount = this.computeChange(this.denominations, this.amount);\n  }\n\n  /**\n   * Calculates and returns change of entered amount\n   * @param denominations denominations\n   * @param amount amount for which change needs to be computed\n   */\n  computeChange(denominations: number[], amount: number): number[] {\n    const coinCount: number[] = [];\n    //sorting denominations in descending order\n    denominations.sort((a: number, b: number) => {\n      return b - a;\n    });\n    denominations.forEach((denomination: number) => {\n      if (amount >= denomination) {\n        const remainder: number = amount % denomination;\n        if (remainder === 0) {\n          coinCount.push(amount / denomination);\n        } else {\n          amount = amount - remainder;\n          coinCount.push(amount / denomination);\n        }\n        amount = remainder;\n      } else {\n        coinCount.push(0);\n      }\n    });\n    return coinCount;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"container\">\n  <!--Change box-->\n  <div class=\"change-box-container\">\n    <label class=\"title\">Change box</label>\n    <div class=\"amount-input-container\">\n      <input type=\"number\" min=1 autocomplete=\"off\" class=\"input-field\" name=\"amount\" placeholder=\"Enter amount\" #amountInput=\"ngModel\" [class.input-field-invalid]=\"amount < 1\" [(ngModel)]=\"amount\" (input)=\"onAmountChange()\"/>\n      <span class=\"error-message\" *ngIf=\"amount < 1\">Amount must be greater than 0.</span>\n    </div>\n    <div>\n      <table class=\"change-box-table\">\n        <tr class=\"change-box-table-row\">\n          <th>Denominations</th>\n          <th>Coin count</th>\n        </tr>\n        <tr class=\"change-box-table-row\" *ngFor=\"let denomination of denominations; let i=index;\">\n          <td>{{denomination}}</td>\n          <td>{{coinCount[i]}}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n  <!--Recent transactions-->\n  <div class=\"recent-transaction-container\">\n    <label class=\"title\">Recent transactions</label>\n    <div>\n      <span *ngIf=\"recentTransactionFetchError\" class=\"error-message\">{{recentTransactionFetchError}}</span>\n      <table class=\"change-box-table\">\n        <tr>\n          <th rowspan=\"2\">Amount</th>\n          <th [attr.colspan]=\"denominations.length\">Denominations</th>\n        </tr>\n        <tr>\n          <th rowspan=\"1\" colspan=\"1\" *ngFor=\"let denom of denominations\">{{denom}}</th>\n        </tr>\n        <tr class=\"transaction-table-row\" *ngFor=\"let transaction of recentTransactions; let i=index\">\n          <td>{{transaction.amount}}</td>\n          <td *ngFor=\"let count of transaction.coinCount\">{{count}}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { UserService } from '../core/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent {\n  constructor(public readonly userService: UserService) {}\n\n  /**\n   * Signs out user\n   */\n  signOut(): void {\n    this.userService.signOut();\n  }\n}\n","<ul>\n  <li><a routerLink=\"/Home\">Home</a></li>\n  <li *ngIf=\"!userService.loggedInUserId\"><a class=\"login-link\" routerLink=\"/Login\">Login</a></li>\n  <li *ngIf=\"userService.loggedInUserId\"><a routerLink=\"/ChangeBox\">Change Box</a></li>\n  <li *ngIf=\"userService.loggedInUserId\"><a routerLink=\"/Profile/{{userService.loggedInUserId}}\">Profile</a></li>\n  <li class=\"user-id\"><a class=\"user-id-link\">{{userService.loggedInUserId}}</a>\n    <button type=\"button\" class=\"sign-out-btn\" *ngIf=\"userService.loggedInUserId\" (click)=\"signOut()\">Sign out</button>\n  </li>\n</ul>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Transaction } from '../model/transaction.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransactionService {\n  private transactions: Transaction[] = [\n    {\n      userId: 'JOHN',\n      recentTransactions: [120, 25670, 20, 30, 267, 893, 568, 921, 156, 601],\n    },\n    {\n      userId: 'DAVE',\n      recentTransactions: [520, 7891, 52, 67, 120, 25670, 20, 30, 267],\n    },\n  ];\n  constructor() {}\n\n  /**\n   * Gets recent transactions based on user id\n   * Method can be replaced with an api call\n   * @param userId user id against which transactions wil be fetched\n   */\n  getRecentTransactions(\n    userId: string\n  ): Observable<number[]> | Observable<never> {\n    const transactionIndex: number = this.transactions.findIndex(\n      (transaction: Transaction) => {\n        return transaction.userId === userId;\n      }\n    );\n    if (transactionIndex !== -1) {\n      return of(this.transactions[transactionIndex].recentTransactions);\n    } else {\n      return throwError(new HttpErrorResponse({ status: 404 }));\n    }\n  }\n}\n","export enum ErrorCodes {\n  Unauthorized = 401,\n  Forbidden = 403,\n}\n\nexport enum ErrorMessages {\n  RecentTransactionFetchError = 'Something went wrong while fetching recent transactions. Please try again later.',\n  LoginError = 'The user id or password is invalid',\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangeBoxComponent } from './change-box/change-box.component';\nimport { AuthGuard } from './core/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'Login', pathMatch: 'full' },\n  {\n    path: 'Home',\n    component: HomeComponent,\n  },\n  { path: 'Login', component: LoginComponent },\n  {\n    path: 'ChangeBox',\n    component: ChangeBoxComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'Profile/:userId',\n    component: UserProfileComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserService } from '../core/user.service';\nimport { ErrorMessages } from '../model/error.enum';\nimport { AuthenticatedUser, LoginCredentials } from '../model/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnDestroy {\n  public authFailedError: string = '';\n  public loginCredentials: LoginCredentials = {\n    userId: '',\n    password: '',\n  };\n  private subscription: Subscription = new Subscription();\n  public userIdErrorMessage: string = '';\n  constructor(\n    private readonly _userService: UserService,\n    private readonly _router: Router\n  ) {}\n\n  /**\n   * Authenticates user and if valid then navigates to change box page\n   */\n  authenticateUser(): void {\n    this.authFailedError = '';\n    this.subscription.add(\n      this._userService.authenticateUser(this.loginCredentials).subscribe(\n        (response: AuthenticatedUser): void => {\n          this.authFailedError = '';\n          this._userService.loggedInUserId = response.userId;\n          sessionStorage.setItem('LOGGED-IN-USER', JSON.stringify(response));\n          this._router.navigate(['/ChangeBox']);\n        },\n        (): void => {\n          this.authFailedError = ErrorMessages.LoginError;\n        }\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"login-form-outer-container\">\n  <div class=\"login-form-inner-container\">\n    <div class=\"login-form-section\">\n      <form #loginForm=ngForm class=\"login-form\" (ngSubmit)=\"authenticateUser()\">\n\n        <div class=\"form-group\">\n          <label for=\"userid\">User ID:</label>\n          <input type=\"text\" id=\"userid\" autocomplete=\"off\" class=\"input-field\" name=\"userId\" pattern=\"[a-zA-Z0-9]+\" #userIdInput=\"ngModel\" [class.input-field-invalid]=\"userIdInput.dirty && userIdInput.invalid\" [(ngModel)]=\"loginCredentials.userId\" (input)=\"loginCredentials.userId = loginCredentials.userId.toUpperCase();authFailedError='';\" required/>\n          <span class=\"error-message\" *ngIf=\"userIdInput.dirty && loginCredentials.userId === ''\">User ID is required.</span>\n          <span class=\"error-message\" *ngIf=\"userIdInput.dirty && loginCredentials.userId !== '' && userIdInput.invalid\">User ID can contain only letters and numbers.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"pwd\">Password:</label>\n          <input type=\"password\" id=\"pwd\" autocomplete=\"off\" class=\"input-field\" name=\"password\" pattern=\"^(?=.*[!@#$*])[^ ]+\" #passwordInput=\"ngModel\" [class.input-field-invalid]=\"passwordInput.dirty && passwordInput.invalid\" minlength=\"6\" maxlength=\"12\" [(ngModel)]=\"loginCredentials.password\" (input)=\"authFailedError='';\"required/>\n          <span class=\"error-message\" *ngIf=\"passwordInput.dirty && loginCredentials.password === ''\">Password is required.</span>\n          <span class=\"error-message\" *ngIf=\"passwordInput.dirty && loginCredentials.password !== '' && !loginCredentials.password.includes(' ') && loginCredentials.password.length < 6\">Password must be between 6 to 12 characters.</span>\n          <span class=\"error-message\" *ngIf=\"passwordInput.dirty && loginCredentials.password.includes(' ')\">Password cannot contain space(s).</span>\n          <span class=\"error-message\" *ngIf=\"passwordInput.dirty && !loginCredentials.password.includes(' ') && loginCredentials.password.length >= 6 && passwordInput.invalid\">Password must include atleast one special character from [!@#$*].</span>\n        </div>\n\n        <span class=\"error-message\">{{authFailedError}}</span>\n        <button type=\"submit\" class=\"submit-button\" [disabled]=\"loginForm.invalid\">Login</button>\n\n      </form>\n    </div>\n\n  </div>\n\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}